Arrays:

An array is a collectoin of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value.

-->In C Language array has a fixed size. The reason being if we want to expand the array we can't be sure that we will get the next memory location to us as free. The shrink doesn't work because the array, when declared, gets memory statically and thus compiler is the only one to destroy it.

Types of Indexing:
1. Zero-based indexing: first element of the array is indexed by a subscript of 0
2. One-based indexing: first element of the array is indexed by a subscript of 1.
3. N-based indexing: the base of the array can be freely chosen.

Advantages:
* Arrays allow random access to elements. This makes accessing elements by position faster.
* Arrays have better cache locality.
* Arrays represent multiple data items of the same type using a single name.

Disadvantages:
* Size cannot be altered.
* Insertion and deletion are difficult as the elements are stored in consecutive memory locations and the shifting operator is costly.

Applications on Array:
* Array stores data elements of the same data type
* Arrays can be used for CPU scheduling
* Arrays are used to implement other data structures like Stack, Queue, Heaps, Hash Tables, etc.

Arrays in Python:
*array(data type, value list): This function is used t create an array with data type and value list specified in its arguments.
*append(): This function is used to add the value mentioned in its arguments at the end of the array.
*insert(i,x): This function is use to add the value(x) at the ith position specified in the argument.
*pop(): This function removes the element at the position mentioned in its argument and returns it. 
*remove(): This function is used to remove the first occurence of the value mentioned in its arguments. 
*index(): This function returns the index of the first occurence of value mentioned in arguments 
*reverse(): This function reverses the array.
